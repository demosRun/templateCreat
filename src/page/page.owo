<template lang="pug">
.home
  .panel
    .left
      .show
    .right
      .title 模块选择
      .module-box
      .title 背景设置
      .input-box
        span 背景颜色
        .color-input-box
          input.color-select(type="color" o-value="this.data.color")
          input.color-text(type="text" o-value="this.data.color")
      .input-box
        span 背景图片
        .text-input-box
          input(type="text" o-value="this.data.bgUrl")
      .title 模块设置
      textarea#styleEdit(value="")
      .title 内容设置
      textarea#htmlEdit(value="")
      .button-box
        .button(o-tap="reMake") 生成
        .button(o-tap="output") 导出图片
</template>

<script>
  module.exports = {
    data: {
      color: '#123b8b',
      bgUrl: '@|1.jpg|',
      activeIndex1: 0,
      activeIndex2: 0,
      showList: [],
      module: {
        jianju: {
          name: "间距",
          template: "<div [[0]]></div>",
          styleData: [`
            height: 40px;
          `],
        },
        toubu: {
          name: "头部",
          template: "<h1 [[0]]>{{0}}</h1><h2 [[1]]>{{1}}</h2>",
          styleData: [
            `
              color: #ffcc00;
              font-size: 44px;
              line-height: 90px;
              text-align: center;
            `,
            `
              color: #ffffff;
              font-size: 28px;
              line-height: 50px;
              text-align: center;
            `
          ],
          edit: ['《学习有方》', '一图领会<br>习近平高质量城市建设新思路']
        },
        bianzhean: {
          name: "编者按",
          template: "<div style='background-color: white;width: 705px;margin: 0 auto;border-radius: 20px;padding: 10px 0;'><div class='editer-title' style='width: 576px;height: 48px;display: block;margin: 30px auto;background-image: url(@|editer-bg.png|);'></div><p [[0]]>{{0}}</p></div>",
          styleData: [`
            font-size: 28px;
            line-height: 1.6;
            width: 660px;
            display: block;
            margin: 0 auto;
            color: #003f8c;
            margin-bottom: 20px;
            text-indent: 2em;
          `],
          edit: ['近日，中共中央总书记、国家主席、中央军委主席习近平在合肥主持召开扎实推进长三角一体化发展座谈会并发表重要讲话，强调提升长三角城市发展质量。<br>&nbsp;&nbsp;城市是人类活动的重要区域，城市建设和发展关乎人民群众的生活质量。对于城市建设，习近平曾多次强调，必须贯彻以人民为中心的发展理念。让人民满意的高质量城市怎么建？一起来听习近平对城市建设、发展、治理的重要论述。']
        },
        biaoti: {
          name: "标题",
          template: '<div [[0]]>{{0}}</div>',
          styleData: [`
            background-image: url(@|title-bg.png|);
            width: 509px;
            height: 108px;
            font-size: 40px;
            line-height: 97px;
            padding-left: 30px;
            color: #0270e9;
            font-weight: bold;
            letter-spacing: 4px;
            font-family: Microsoft YaHei;
          `],
          edit: ['三大成果']
        },
        tupian: {
          name: "图片",
          template: '<img src="{{0}}" [[0]]>',
          styleData: [`
            width: 705px;
            display: block;
            margin: 0 auto;
          `],
          edit: ['@|063742039f975378.jpg|']
        },
        shuoming: {
          name: '图片说明',
          template: '<div style="background-image: url(@|card-bg.jpg|);font-size: 22px;line-height: 60px;height: 60px;overflow: hidden;width: 94%;margin: 0 auto;color: #222;"><div [[0]]>{{0}}</div></div>',
          styleData: [`
            width: 575px;
            background-image: url(@|doit.jpg|);
            background-repeat: no-repeat;
            background-position: 30px center;
            padding: 0 65px;
          `],
          edit: ['图片的说明']
        },
        cardh1: {
          name: '卡片里的标题h1',
          template: '<h1 [[0]]>{{0}}</h1>',
          styleData: [`
            font-size: 32px;
            line-height: 1.5;
            color: #025bc6;
            width: 675px;
            padding: 0 15px;
            margin: 0 auto;
            text-indent: 50px;
            padding-bottom: 10px;
            background-image: url(@|b1d8aa53104b4405.jpg|);
          `],
          edit: ['标题内容']
        },
        cardh2: {
          name: '卡片里的标题h2',
          template: '<h2 [[0]]>{{0}}</h2>',
          styleData: [`
            font-size: 28px;
            line-height: 1.5;
            color: #025bc6;
            width: 675px;
            padding: 0 15px;
            margin: 0 auto;
            text-indent: 50px;
            padding-bottom: 10px;
            background-image: url(@|b1d8aa53104b4405.jpg|);
            font-weight: normal;
          `],
          edit: ['标题内容']
        },
        cardp: {
          name: '卡片里的文字',
          template: '<p [[0]]>{{0}}</p>',
          styleData: [`
            font-size: 24px;
            line-height: 1.5;
            color: #1c1c1c;
            width: 675px;
            padding: 0 15px;
            margin: 0 auto;
            text-indent: 50px;
            background-image: url(@|b1d8aa53104b4405.jpg|);
            padding-bottom: 10px;
          `],
          edit: ['我们展现了中阿携手战胜疫情的坚强决心。我们将继续加强疫情防控、疫苗研发合作，捍卫多边主义，支持世界卫生组织发挥关键作用，反对将病毒标签化、疫情政治化，共同为赢得全球抗疫胜利作出贡献。']
        },
        line: {
          name: '装饰线',
          template: '<div [[0]]><div [[1]]></div></div>',
          styleData: [`
            width: 705px;
            margin: 0 auto;
            background-image: url(@|b1d8aa53104b4405.jpg|);
          `,`
            background-image: url(@|line.png|);
            height: 80px;
            background-repeat: no-repeat;
            background-position: center;
          `],
          edit: ['']
        },
      }
      
    },
    created: function () {
      console.log(this.query('.color-select').value)
      setTimeout(() => {
        this.make()
      }, 100);
      let moduleHTML = ''
      for (const key in this.data.module) {
        if (this.data.module.hasOwnProperty(key)) {
          const element = this.data.module[key];
          moduleHTML += `<div class="module-item" o-tap="selectModule('${key}')">${element.name}</div>`
        }
      }
      this.query('.module-box').innerHTML = moduleHTML
      setTimeout(() => {
        this.handleEvent(this, this.query('.module-box'))
      }, 0);
      
    },
    make: function () {
      // 背景颜色
      const showBox = this.query('.show')
      showBox.style.backgroundColor = this.data.color
      showBox.style.backgroundImage = `url(${this.data.bgUrl})`
    },
    output: function () {
      html2canvas(this.query('.show'), {"allowTaint": false}).then(canvas => {
        var imgData = canvas.toDataURL('image/octet-stream');
        if (canvas.msToBlob) {     // IE 9+浏览器
          var blob = canvas.msToBlob();
          window.navigator.msSaveBlob(blob, 'test.png');
        } else {
          this.saveFile(imgData, 'test.png');
        }
      });
    },
    // 生成样式字符串
    creatStyleStr: function (ele, key) {
      ele.showHTML = ele.template
      for (let index = 0; index < ele['styleData'].length; index++) {
        const styleData = ele['styleData'][index].replace(/  /g, ' ')
        ele.showHTML = ele.showHTML.replace(`[[${index}]]`, `class="tem" key="${key}" ind="${index}" style="${styleData}"`)
      }
      return ele
    },
    selectModule: function (name) {
      let item = this.data.module[name]
      this.data.showList.push(item)
      
      this.outPutShow()
    },
    outPutShow: function () {
      let newShowHTML = ''
      for (let index = 0; index < this.data.showList.length; index++) {
        const item = this.data.showList[index];
        // 替换样式
        item = this.creatStyleStr(item, index)
        // console.log(item)
        let template = item['showHTML']
        // 模板插值
        for (const ind in item['edit']) {
          if (item['edit'].hasOwnProperty(ind)) {
            const element = item['edit'][ind];
            template = template.replace(`{{${ind}}}`, element)
          }
        }
        newShowHTML += template 
      }
      
      this.query('.show').innerHTML = newShowHTML
      setTimeout(() => {
        this.queryAll('.show .tem').forEach(element => {
          element.onclick = owo.script.page.changeStyle
        });
      }, 100);
    },
    saveFile: function (data, filename) {
      var save_link = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');
      save_link.href = data;
      save_link.download = filename;
      var event = document.createEvent('MouseEvents');
      event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
      save_link.dispatchEvent(event);
    },
    changeStyle: function () {
      const index1 = parseInt(this.getAttribute('key'))
      const index2 = parseInt(this.getAttribute('ind'))
      owo.script.page.data.activeIndex1 = index1
      owo.script.page.data.activeIndex2 = index2
      let styleData = owo.script.page.data.showList[index1].styleData[index2]
      console.log(styleData)
      styleData = styleData.replace(/  /g, '')
      owo.query('#styleEdit')[0].innerText = styleData
      owo.query('#htmlEdit')[0].innerText = JSON.stringify(owo.script.page.data.showList[index1].edit)
    },
    reMake: function () {
      const newStyleData = owo.query('#styleEdit')[0].value
      const newHtmlData = owo.query('#htmlEdit')[0].value
      owo.script.page.data.showList[this.data.activeIndex1].styleData[this.data.activeIndex2] = newStyleData
      owo.script.page.data.showList[this.data.activeIndex1].edit = JSON.parse(newHtmlData)
      // console.log(owo.script.page.data.showList)
      this.outPutShow()
    }
  }
</script>


<style lang="less">
.home {
  width: 100%;
  height: 100%;
}
.panel {
  display: flex;
  width: 100%;
  height: 100%;
}
.left {
  height: 100%;
  overflow: auto;
  width: calc(100% - 300px);
}
.right {
  width: 300px;
  height: 100%;
  position: relative;
  background-color: white;
  textarea {
    background-color: gainsboro;
    padding: 10px;
    width: calc(100% - 20px);
    height: 300px;
    display: block;
  }
}
.show {
  width: 750px;
  margin: 0 auto;
  background-color: white;
  background-size: 100% auto;
  background-repeat: no-repeat;
}
.button-box {
  position: absolute;
  bottom: 0px;
  width: 100%;
}
.button {
  background-color: #009fe9;
  color: white;
  text-align: center;
  line-height: 45px;
  font-size: 20px;
  
  height: 45px;
  cursor: pointer;
}
.input-box {
  display: flex;
  justify-content: space-between;
  height: 40px;
  align-items: center;
  padding: 0 20px;
}
.color-input-box {
  display: flex;
  width: 95px;
  border: 1px solid #ccc;
  .color-select {
    border: none;
    padding: 0;
    margin: 0;
    width: 25px;
    height: 25px;
  }
  .color-text {
    width: 60px;
    border: none;
    background-color: gainsboro;
    padding: 0 5px;
    outline: none;
  }
}
.text-input-box {
  input {
    height: 27px;
    padding: 0 10px;
    width: 140px;
    background-color: gainsboro;
    border: none;
  }
}
.title {
  background-color: moccasin;
  line-height: 30px;
  padding: 0 5px;
}

.tem {
  cursor: pointer;
}
.tem:hover {
  background-color: rgba(0, 0, 0, 0.6);
}
</style>
